;==========================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;==========================================================

[colors]
purple = #c792ea
background = #1d2021
background-alt = #928374
foreground = #ebdbb2
primary = #d64d0e
secondary = #a89984
alert = #A54242
disabled = #707880
orange = #FA9D1A
green = #00FF00
vivid_blue = #9CDCFE
lightgrey = #D3D3D3
darkgrey = #4d4d4d

[bar/top]
monitor = ${env:MONITOR:}
width = 100%
height = 32pt
radius = 0

; dpi = 96

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 2pt

padding-left = 0
padding-right = 3

module-margin = 1

separator = |
separator-foreground = ${colors.background}

font-0 = "JetBrainsMono Nerd Font;size=14"
font-1 = "JetBrainsMono Nerd Font;size=14"

modules-left = i3 date
modules-center = xwindow
modules-right = temperature

cursor-click = pointer
cursor-scroll = ns-resize

enable-ipc = true

tray-position = right

; wm-restack = generic
; wm-restack = bspwm
wm-restack = i3

[module/calendar]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = echo "hi"

; Set this to true for scripts that continuously produce output
; If set to 'true', everytime the script produces a new line of output, the module updates.
; Otherwise, only the first line of output is considered and all later lines are discarded.
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 90

; Set environment variables in the 'exec' script
; New in version 3.6.0
; env-NAME = VALUE
; env-FOO = BAR
[module/xworkspaces]
type = internal/xworkspaces

label-active = %name%
label-active-background = ${colors.background-alt}
label-active-underline= ${colors.primary}
label-active-padding = 1

label-occupied = %name%
label-occupied-padding = 1

label-urgent = %name%
label-urgent-background = ${colors.alert}
label-urgent-padding = 1

label-empty = %name%
label-empty-foreground = ${colors.disabled}
label-empty-padding = 1

[module/xwindow]
format-foreground = #ffffff
type = internal/xwindow
label-foreground = ${colors.grey}
label-underline = ${colors.secondary}

[module/pulseaudio]
type = internal/pulseaudio
format-volume-prefix = "  "
format-volume-prefix-foreground = ${colors.green}
format-volume = <label-volume>
label-volume = %percentage%%
label-muted = 婢
label-muted-foreground = ${colors.disabled}

[module/temperature]
type = internal/temperature

; Seconds to sleep between updates
; ; Default: 1
interval = 0.5

; ; Thermal zone to use
; ; To list all the zone types, run
; ; $ for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
; ; Default: 0
thermal-zone = 0
;
; ; Full path of temperature sysfs path
; ; Use `sensors` to find preferred temperature source, then run
; ; $ for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
; ; to find path to desired file
; ; Default reverts to thermal zone setting
; hwmon-path = /sys/devices/platform/coretemp.0/hwmon/hwmon2/temp1_input
;
; ; Base temperature for where to start the ramp (in degrees celsius)
; ; Default: 0
; base-temperature = 20
;
; ; Threshold temperature to display warning label (in degrees celsius)
; ; Default: 80
; warn-temperature = 60
[module/memory]
type = internal/memory
interval = 2
format-prefix = ""
label-padding-left = 1
format-prefix-foreground = ${colors.vivid_blue}
label = %percentage_used:1%%

[module/cpu]
type = internal/cpu
interval = 2
format-prefix = ""
format-prefix-foreground = ${colors.vivid_blue}
label = %percentage:2%%

[network-base]
type = internal/network
interval = 5
format-connected = <label-connected>
format-disconnected = <label-disconnected>
label-disconnected = %{F#F0C674}%ifname%%{F#707880} disconnected

[module/i3]
type = internal/i3

index-sort = true

enable-click = true
enable-scroll = true

wrapping-scroll = false
reverse-scroll = false
fuzzy-match = true
strip-wsnumbers = true

ws-icon-0 = "2:Browser;"
ws-icon-1 = "1:Emacs;"
ws-icon-2 = "3:Rpi;"
ws-icon-3 = "4:Mc;"
ws-icon-default = 

format = <label-state> <label-mode>
label-focused-foreground = ${colors.lightgrey}
label-focused-underline = ${colors.green}
label-focused-padding = 2
label-focused = %index% %icon%

label-unfocused-foreground = ${colors.darkgrey}
label-unfocused-underline = ${colors.background}
label-unfocused-padding = 2
label-unfocused = %index% %icon%

label-visible-foreground = ${colors.secondary}
label-visible-underline = ${colors.background}
label-visible-underline-height = 1
label-visible-padding = 2
label-visible= %index% %icon%

label-urgent = %name%
label-urgent-background = ${color.red}
label-urgent-padding = 1

[module/network]
; Available tags:
;   <label-connected> (default)
;   <ramp-signal>
format-connected = <ramp-signal> <label-connected>

; Available tags:
;   <label-disconnected> (default)
format-disconnected = <label-disconnected>

; Available tags:
;   <label-connected> (default)
;   <label-packetloss>
;   <animation-packetloss>
format-packetloss = <animation-packetloss> <label-connected>

; All labels support the following tokens:
;   %ifname%    [wireless+wired]
;   %local_ip%  [wireless+wired]
;   %local_ip6% [wireless+wired]
;   %essid%     [wireless]
;   %signal%    [wireless]
;   %upspeed%   [wireless+wired]
;   %downspeed% [wireless+wired]
;   %netspeed%  [wireless+wired] (%upspeed% + %downspeed%) (New in version 3.6.0)
;   %linkspeed% [wired]
;   %mac%       [wireless+wired] (New in version 3.6.0)

; Default: %ifname% %local_ip%
label-connected = 
label-disconnected = 睊
label-connected-foreground = ${colors.green}
label-disconnected-foreground = ${colors.red}

; Default: (none)

; Default: (none)
;label-packetloss = %essid%
;label-packetloss-foreground = #eefafafa

; Only applies if <ramp-signal> is used
ramp-signal-0 = 😱
ramp-signal-1 = 😠
ramp-signal-2 = 😒
ramp-signal-3 = 😊
ramp-signal-4 = 😃
ramp-signal-5 = 😈

; Only applies if <animation-packetloss> is used
animation-packetloss-0 = ⚠
animation-packetloss-0-foreground = #ffa64c
animation-packetloss-1 = 📶
animation-packetloss-1-foreground = #000000
; Framerate in milliseconds
animation-packetloss-framerate = 500
type = internal/network
; Name of the network interface to display. You can get the names of the
; ; interfaces on your machine with `ip link`
; ; Wireless interfaces often start with `wl` and ethernet interface with `eno` or `eth`
interface = wlan0
;
; ; If no interface is specified, polybar can detect an interface of the given type.
; ; If multiple are found, it will prefer running interfaces and otherwise just
; ; use the first one found.
; ; Either 'wired' or 'wireless'
; ; New in version 3.6.0
; interface-type = wireless
;
; ; Seconds to sleep between updates
; ; Default: 1
; interval = 3.0
;
; ; Test connectivity every Nth update
; ; A value of 0 disables the feature
; ; NOTE: Experimental (needs more testing)
; ; Default: 0
; ;ping-interval = 3
;
; ; @deprecated: Define min width using token specifiers (%downspeed:min% and %upspeed:min%)
; ; Minimum output width of upload/download rate
; ; Default: 3
; udspeed-minwidth = 5
;
; ; Accumulate values from all interfaces
; ; when querying for up/downspeed rate
; ; Default: false
; accumulate-stats = true
;
; ; Consider an `UNKNOWN` interface state as up.
; ; Some devices like USB network adapters have
; ; an unknown state, even when they're running
; ; Default: false
; unknown-as-up = true
;
; ; The unit used for displaying network speeds
; ; For example if set to the empty string, a speed of 5 KB/s is displayed as 5 K
; ; Default: B/s
; ; New in version 3.6.0
; speed-unit = ''


[module/date]
type = internal/date
interval = 1

date = %D %H:%M:%S

label = %date%
label-foreground = #ffffff

[settings]
screenchange-reload = true
pseudo-transparency = true

[module/docker]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = echo "hi"

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
exec-if = pgrep -x myservice

; Set this to true for scripts that continuously produce output
; If set to 'true', everytime the script produces a new line of output, the module updates.
; Otherwise, only the first line of output is considered and all later lines are discarded.
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 90
label = %output:0:15:...%


; Set environment variables in the 'exec' script
; New in version 3.6.0
; env-NAME = VALUE
; env-FOO = BAR
